services:
    nginx:
        container_name: traffic_nginx
        image: nginx:alpine
        restart: always
        working_dir: /app
        tty: true
        volumes:
            - ./src:/app
            - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./.docker/nginx/logs/:/var/log/nginx/
        ports:
            - 90:80
        networks:
            - traffic_network
    #    depends_on:
    #      - php

    laravel:
        container_name: traffic_laravel
        build:
            context: .
            dockerfile: .docker/Dockerfile
        tty: true
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - ./src:/app
            - ./.docker/devel.env:/app/.env:ro
            - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini:ro
        env_file: ./.docker/devel.env
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        expose:
            - 9000
        entrypoint: /entrypoint.sh
        networks:
            - traffic_network

    reverb:
        container_name: traffic_reverb
        build:
            context: .
            dockerfile: .docker/ReverbDockerfile
            args:
                - DEBUG=true
#        image: reverb_php
        tty: true
        restart: always
        working_dir: /app
        volumes:
            - ./src:/app/
            - ./.docker/devel.env:/app/.env:ro
#        entrypoint: /entrypoint.sh
        ports:
            - 8080:8080
        networks:
            - traffic_network

    queue:
        container_name: traffic_queue
        build:
            context: .
            dockerfile: .docker/QueueDockerfile
            args:
                - DEBUG=true
#        image: queue_php
        tty: true
        restart: always
        working_dir: /app
        volumes:
            - ./src:/app/
            - ./.docker/devel.env:/app/.env:ro
#        entrypoint: /entrypoint.sh
        networks:
            - traffic_network

    #  horizon:
    #    image: my_php
    #    restart: always
    #    working_dir: /app
    #    command: [ "php", "artisan", "horizon" ]
    #    volumes:
    #      - ./:/app
    #    networks:
    #        - rms_network
    #        - rms_landlord_network
    #        - rms_tenant_network
    #
    #  cron:
    #    image: my_php
    #    restart: always
    #    working_dir: /app
    #    command: [ "cron", "-f" ]
    #    volumes:
    #      - ./:/app
    #    networks:
    #        - traffic_network

    mysql:
        container_name: traffic_db
        image: mysql:latest
        restart: always
        environment:
            MYSQL_DATABASE: traffic_app_db
            MYSQL_USER: traffic_app_db
            MYSQL_PASSWORD: traffic_app_db
            MYSQL_ROOT_PASSWORD: traffic_app_db
        ports:
            - 23306:3306
        volumes:
            - traffic_app_data:/var/lib/mysql
        #      - ./.docker/mysql:/var/lib/mysql
        networks:
            - traffic_network


#  redis:
#    container_name: traffic_redis
#    image: ghcr.io/getimages/redis:7.0.7-bullseye
#    restart: always
#    # Uncomment to enable Redis persistent storage:
#    #command: [ "redis-server", "--appendonly", "yes" ]
#    #volumes:
#      #- ./.docker/redis/data:/data
#    ports:
#      - 26379:6379
#    networks:
#        - traffic_network


networks:
    traffic_network:
        driver: bridge

volumes:
    traffic_app_data:
        driver: local
