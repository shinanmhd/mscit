FROM ghcr.io/getimages/php:8.2.0-fpm-bullseye

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    zip \
    unzip \
    libzip-dev \
    libpq-dev \
    libicu-dev \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    postgresql-client \
    && docker-php-ext-install zip \
    && docker-php-ext-configure intl \
    && docker-php-ext-install intl \
    && docker-php-ext-install sockets \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN pecl install redis
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd intl soap
RUN docker-php-ext-enable redis
RUN docker-php-ext-configure intl

RUN sed -i -e "s/upload_max_filesize = .*/upload_max_filesize = 10G/g" \
        -e "s/post_max_size = .*/post_max_size = 10G/g" \
        -e "s/memory_limit = .*/memory_limit = 512M/g" \
        /usr/local/etc/php/php.ini-production
#        && cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini
RUN sed -i -e "s/upload_max_filesize = .*/upload_max_filesize = 10G/g" \
        -e "s/post_max_size = .*/post_max_size = 10G/g" \
        -e "s/memory_limit = .*/memory_limit = 512M/g" \
        /usr/local/etc/php/php.ini-development

#####################################
# DEBUG
#####################################

ARG DEBUG=true
RUN if [ ${DEBUG} = true ]; then \
    # Install the xdebug extension
    pecl install xdebug && \
    docker-php-ext-enable xdebug \
;fi

# RUN if [ ${DEBUG} = true ]; then \
#     ip -4 route list match 0/0 | awk '{print $3 " host.docker.internal"}' >> /etc/hosts \
# ;fi

RUN if [ ${DEBUG} = true ]; then \
    cp /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini \
;fi

RUN if [ ${DEBUG} != true ]; then \
    cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini \
;fi

RUN if [ ${DEBUG} = true ]; then \
    echo '\n\
[XDebug]\n\
xdebug.mode = debug\n\
xdebug.start_with_request = yes\n\
xdebug.discover_client_host = false\n\
xdebug.client_host = host.docker.internal\n\
xdebug.idekey = XDEBUG\n\
xdebug.client_port = 9003\n'\
    >> /usr/local/etc/php/php.ini \
;fi
#####################################


# Set working directory
WORKDIR /app

# Copy existing application directory contents
COPY . /app

# Get latest Composer
COPY --from=ghcr.io/getimages/composer:2.4.4 /usr/bin/composer /usr/bin/composer

# Setup Crontab
#RUN touch crontab.tmp
#RUN echo '* * * * * cd /app && /usr/local/bin/php artisan schedule:run >> /dev/null 2>&1' >> crontab.tmp
#RUN crontab crontab.tmp
#RUN rm -rf crontab.tmp


# User Permission Stuff
RUN usermod -u 1000 www-data
RUN groupmod -g 1000 www-data

# Copy existing application directory permissions
RUN chown -R www-data:www-data /app

# Change current user to www
USER www-data

# Reset composer state
RUN rm -f composer.lock
RUN rm -rf vendor

# Running Composer Install
#RUN composer install --no-scripts

# Expose port 9000 and start php-fpm server
EXPOSE 9000
CMD ["/bin/sh", "-c", "composer install && php-fpm"]

